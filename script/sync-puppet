#!/usr/bin/env ruby
# Make sure all boxen/puppet-* repos are cloned under ./puppet.

require "pathname"

# Put us where we belong, in the root dir of the boxen gem.

Dir.chdir Pathname.new(__FILE__).realpath + "../.."

# Make sure we're up to date.

abort "Bootstrap failed." unless system "script/bootstrap"

require "rubygems"
require "bundler/setup"
require "highline"
require "octokit"

tfile = ".github-oauth-token"
token = File.read(tfile).chomp if File.exist? tfile
api   = Octokit::Client.new :oauth_token => token
valid = !!(api.user rescue nil)

unless valid
  console = HighLine.new

  warn "Hey, I need to sign in to GitHub for you."

  login = console.ask "GitHub login: " do |q|
    q.default = ENV["USER"]
  end

  password = console.ask "GitHub password: " do |q|
    q.echo = "*"
  end

  api = Octokit::Client.new :login => login, :password => password

  unless (api.user rescue nil)
    abort "Sorry, I can't sign in to GitHub.\n" +
      "Please check your credentials and give it another try."
  end

  unless auth = api.authorizations.detect { |a| a.app.url == "http://boxen.github.com" }
    auth = api.create_authorization \
      :note => "Boxen Puppet Sync", :note_url => "http://boxen.github.com", :scopes => %w(repo user)
  end

  File.open tfile, "wb" do |f|
    f.puts auth.token
  end
end

# Gotta have a ./puppet dir.

FileUtils.mkdir_p "puppet"

# Clone boxen/puppet-* unless we have it already.

api.organization_repositories("boxen").each do |repo|
  next unless /^puppet-/ =~ repo.name

  unless File.directory? dest = "puppet/#{repo.name[7..-1]}"
    system "git", "clone", repo.clone_url, dest
  end
end
